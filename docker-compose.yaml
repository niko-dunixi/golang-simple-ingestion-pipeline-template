version: "3.8"

services:
  rabbitmq:
    # We will use RabbitMQ locally instead of SQS
    platform: "linux/amd64/v8"
    image: rabbitmq:3-management
    hostname: 'rabbitlocal'
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - "rabbitmq-log:/var/log/rabbitmq"
      - "rabbitmq-data:/var/lib/rabbitmq"
    deploy:
      restart_policy:
        condition: any
  mongo:
    platform: "linux/amd64"
    # We will use Mongo locally instead of DynamoDB
    image: mongo:4.4.18
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: devuser
      MONGO_INITDB_ROOT_PASSWORD: d3vpass
      ME_CONFIG_MONGODB_SSLVALIDATE: false
    ports:
      - 27017:27017
    volumes:
      - mongodb-data-container:/data/db
    deploy:
      restart_policy:
        condition: any
  mongo-express:
    platform: "linux/amd64/v8"
    depends_on:
      - mongo
    image: mongo-express:1.0.0-20
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://devuser:d3vpass@mongo/db?authSource=admin&ssl=false
    ports:
      - 8081:8081
    command: >
      bash -c "
        while ! nc -z mongo 27017; do
          echo sleeping;
          sleep 1;
        done;
      npm start;
      "
  work-supplier:
    platform: "linux/amd64/v2"
    # cap_add:
    # - SYS_PTRACE
    depends_on:
      - rabbitmq
    build:
      context: .
      target: main-vanilla
      args:
        TARGET_PACKAGE: "work-supplier"
    environment:
      RABBIT_SERVER_URL: amqp://guest:guest@rabbitmq:5672/
      QUEUE_URL: rabbit://data-ingress
      MONGO_SERVER_URL: mongodb://devuser:d3vpass@mongo
      COLLECTION_URL: mongo://main-db/main-collection?id_field=id
    ports:
      - "8080:8080"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
  work-consumer:
    platform: "linux/amd64/v2"
    # cap_add:
    # - SYS_PTRACE
    depends_on:
      - rabbitmq
    build:
      context: .
      target: main-vanilla
      args:
        TARGET_PACKAGE: "work-consumer"
    environment:
      RABBIT_SERVER_URL: amqp://guest:guest@rabbitmq:5672/
      QUEUE_URL: rabbit://data-egress
      MONGO_SERVER_URL: mongodb://devuser:d3vpass@mongo
      COLLECTION_URL: mongo://main-db/main-collection?id_field=id
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
      
volumes:
  rabbitmq-data:
  rabbitmq-log:
  mongodb-data-container: